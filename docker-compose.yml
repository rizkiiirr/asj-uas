# docker-compose.yml

version: '3.8'

services:
  # Definisi service untuk aplikasi web
  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      # Poin ini memenuhi syarat agar kode bisa diubah dan hasilnya
      # langsung terlihat di browser tanpa harus rebuild image. 
      - ./app:/app
    env_file:
      # Poin ini memenuhi syarat untuk memuat data privasi dari file .env. 
      - .env
    depends_on:
      - db

  # Definisi service untuk database
  db:
    image: mysql:8.0
    # Poin ini memenuhi syarat bahwa aplikasi web dan database
    # dijalankan di container yang berbeda. 
    environment:
      # Menggunakan variabel dari file .env untuk setup database
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      # Poin ini memenuhi syarat bahwa saat container aplikasi web dirusak,
      # data di database masih bisa jalan (tersimpan aman). 
      - db-data:/var/lib/mysql
# Service baru untuk phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      # Akses phpMyAdmin dari browser di port 8081
      - "8081:80"
    environment:
      # Menghubungkan phpMyAdmin ke service 'db' kita
      PMA_HOST: db
    depends_on:
      - db
      - phpmyadmin
# Definisi volume untuk persistensi data database
volumes:
  db-data: